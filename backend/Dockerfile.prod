# Use Node.js 22 Alpine for smaller image size
FROM node:22-alpine

# Install production dependencies
RUN apk add --no-cache wget

# Set working directory
WORKDIR /app

# Copy backend package files first for better caching
COPY backend/package.json backend/package-lock.json ./

# Install dependencies directly in the backend directory
RUN npm ci --only=production

# Install TypeScript globally for building
RUN npm install -g typescript

# Copy backend source code and configuration
COPY backend/src ./src
COPY backend/tsconfig.json ./

# Create dist/database directory for schema files
RUN mkdir -p dist/database

# Build the TypeScript code
RUN npm run build

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3001/health || exit 1

# Start the production server for PostgreSQL
CMD ["npm", "run", "start:postgres"] 
